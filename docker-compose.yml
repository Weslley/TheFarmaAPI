version: '3'
services:
  nginx:
    image: nginx:mainline-alpine
    container_name: thefarma_api_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/prod/nginx:/etc/nginx/conf.d
      - ./config/prod/ssl:/etc/ssl/certs
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
      - static-data:/staticfiles
      - media-data:/mediafiles
    depends_on:
      - web
    networks:
      - app-network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    command: certonly --webroot --webroot-path=/var/www/html --email thefarmaapp@gmail.com --agree-tos --no-eff-email --staging -d api.thefarma.com.br
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./config/prod/ssl:/etc/ssl/certs
    depends_on:
      - nginx
    networks:
      - app-network
    restart: always

  web:
    build: .
    container_name: thefarma_api
    command: bash -c "python manage.py migrate && gunicorn thefarmaapi.wsgi:application -b 0.0.0.0:8000  --workers 3 --log-level=info"
    volumes:
      - static-data:/thefarmaapi/staticfiles
      - media-data:/thefarmaapi/media
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    networks:
      - app-network
    restart: always

  worker_default:
    build:
      context: .
      dockerfile: Dockerfile
    # command: bash -c "celery --app=thefarmaapi._celery:app worker --autoscale=10,3 --loglevel=DEBUG --queues=default,update_cliente,propostas,contas --hostname=worker_default"
    # command: bash -c "celery -A thefarmaapi worker -l debug --autoscale=10,3 --queues=default,update_cliente,propostas,contas --hostname=worker_default"
    command: bash -c "celery --app=thefarmaapi._celery:app worker --autoscale=10,3 --loglevel=DEBUG --queues=default,update_cliente,propostas,periodicos --hostname=worker_default"
    volumes:
      - media-data:/thefarmaapi/media
      - .:/thefarmaapi
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    networks:
      - app-network
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A thefarmaapi beat -l debug"
    volumes:
      - media-data:/thefarmaapi/media
      - .:/thefarmaapi
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    networks:
      - app-network
    restart: always

  worker_channels:
    build: .
    container_name: worker_channels
    command: bash -c "python manage.py runworker"
    volumes:
      - static-data:/thefarmaapi/staticfiles
      - media-data:/thefarmaapi/media
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    networks:
      - app-network
    restart: always

  channels:
    build:
      context: .
      dockerfile: Dockerfile
    #command: bash -c "daphne -e ssl:443:privateKey=/etc/ssl/certs/api.thefarma.com.br.pem:certKey=/etc/ssl/certs/api.thefarma.com.br.crt -b 0.0.0.0 -p 8000 thefarmaapi.asgi:channel_layer"
    command: bash -c "daphne -b 0.0.0.0 -p 8000 thefarmaapi.asgi:channel_layer"
    volumes:
      - media-data:/thefarmaapi/media
      - ./config/prod/ssl:/etc/ssl/certs
    expose:
      - "8000"
      - "443"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    networks:
      - app-network
    restart: always

  redis_channels:
    image: redis:alpine
    command: redis-server
    container_name: redis_channels
    networks:
      - app-network

  redis_celery:
    image: redis:alpine
    container_name: redis_celery
    networks:
      - app-network

volumes:
  web-root:
  certbot-etc:
  certbot-var:
  static-data:
  media-data:
  
networks:
  - app-network
# networks:
#   app-network:
#     driver: bridge 
  