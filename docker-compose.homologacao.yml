version: '3'
services:
  nginx:
    image: nginx:alpine
    container_name: thefarma_api_nginx
    ports:
      - "80:80"
    volumes:
      - ./config/homologacao/nginx:/etc/nginx/conf.d
      - ./staticfiles:/staticfiles/
      - ./media:/mediafiles/
    depends_on:
      - web
    restart: always

  redis_channels:
    image: redis
    container_name: redis_channels
    ports:
      - "6379"

  redis_celery:
    image: redis
    container_name: redis_celery
    ports:
      - "6379"

  web:
    build: .
    container_name: thefarma_api
    command: bash -c "python manage.py migrate && python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000" #gunicorn thefarmaapi.wsgi:application -b 0.0.0.0:8000  --workers 3 --log-level=info
    volumes:
      - .:/thefarmaapi/
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    restart: always

  worker_default:
    build: .
    command: bash -c "celery --app=thefarmaapi._celery:app worker --autoscale=10,3 --loglevel=DEBUG --queues=default,update_cliente,propostas,periodicos --hostname=worker_default"
    volumes:
      - .:/thefarmaapi
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    restart: always

  celery_beat:
    build: .
    command: bash -c "celery -A thefarmaapi beat -l debug"
    volumes:
      - .:/thefarmaapi
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    restart: always

  worker_channels:
    build: .
    container_name: worker_channels
    command: bash -c "python manage.py runworker"
    volumes:
      - .:/thefarmaapi
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    restart: always

  channels:
    build: .
    command: bash -c "daphne -b 0.0.0.0 -p 8000 thefarmaapi.asgi:channel_layer"
    volumes:
      - .:/thefarmaapi
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis_channels
      - redis_celery
    restart: always

